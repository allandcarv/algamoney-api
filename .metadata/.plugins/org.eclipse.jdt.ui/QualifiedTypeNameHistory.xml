<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="org.springframework.data.domain.Pageable"/>
<fullyQualifiedTypeName name="org.springframework.data.domain.PageImpl"/>
<fullyQualifiedTypeName name="javax.persistence.criteria.CriteriaBuilder"/>
<fullyQualifiedTypeName name="javax.persistence.criteria.CriteriaQuery"/>
<fullyQualifiedTypeName name="javax.persistence.criteria.Root"/>
<fullyQualifiedTypeName name="javax.persistence.criteria.Predicate"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configuration.EnableResourceServer"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfigurerAdapter"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configuration.EnableAuthorizationServer"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerConfigurerAdapter"/>
<fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationManager"/>
<fullyQualifiedTypeName name="java.lang.Override"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.provider.token.TokenStore"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.provider.token.store.JwtAccessTokenConverter"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.provider.token.store.JwtTokenStore"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.provider.refresh.RefreshTokenGranter"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ControllerAdvice"/>
<fullyQualifiedTypeName name="org.springframework.web.servlet.mvc.method.annotation.ResponseBodyAdvice"/>
<fullyQualifiedTypeName name="org.springframework.http.server.ServletServerHttpRequest"/>
<fullyQualifiedTypeName name="org.springframework.http.server.ServletServerHttpResponse"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.common.OAuth2AccessToken"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.common.DefaultOAuth2AccessToken"/>
<fullyQualifiedTypeName name="javax.servlet.http.Cookie"/>
<fullyQualifiedTypeName name="javax.servlet.ServletRequestWrapper"/>
<fullyQualifiedTypeName name="javax.servlet.http.HttpServletRequestWrapper"/>
<fullyQualifiedTypeName name="org.apache.catalina.util.ParameterMap"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.CrossOrigin"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
<fullyQualifiedTypeName name="org.springframework.core.annotation.Order"/>
<fullyQualifiedTypeName name="org.springframework.core.Ordered"/>
<fullyQualifiedTypeName name="javax.servlet.Filter"/>
<fullyQualifiedTypeName name="javax.servlet.http.HttpServletRequest"/>
<fullyQualifiedTypeName name="javax.servlet.http.HttpServletResponse"/>
<fullyQualifiedTypeName name="antlr.collections.List"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="javax.persistence.Entity"/>
<fullyQualifiedTypeName name="javax.persistence.Table"/>
<fullyQualifiedTypeName name="javax.persistence.Id"/>
<fullyQualifiedTypeName name="javax.persistence.ManyToMany"/>
<fullyQualifiedTypeName name="javax.persistence.JoinTable"/>
<fullyQualifiedTypeName name="javax.persistence.JoinColumns"/>
<fullyQualifiedTypeName name="javax.persistence.JoinColumn"/>
<fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
<fullyQualifiedTypeName name="java.util.Optional"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="com.algaworks.algamoney.api.repository.UsuarioRepository"/>
<fullyQualifiedTypeName name="com.algaworks.algamoney.api.model.Usuario"/>
<fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UsernameNotFoundException"/>
<fullyQualifiedTypeName name="org.springframework.security.core.userdetails.User"/>
<fullyQualifiedTypeName name="java.util.Set"/>
<fullyQualifiedTypeName name="java.util.HashSet"/>
<fullyQualifiedTypeName name="org.springframework.security.core.authority.SimpleGrantedAuthority"/>
<fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
<fullyQualifiedTypeName name="org.bouncycastle.crypto.generators.BCrypt"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
<fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
<fullyQualifiedTypeName name="javax.persistence.FetchType"/>
</qualifiedTypeNameHistroy>
